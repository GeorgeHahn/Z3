module boss(clk, address, data);

input clk;
output [16:0] address;
input [7:0] data;

reg [16:0] address;

reg [16:0] requestAddress;
reg [16:0] currentAddress;
reg [7:0] state;
reg done;
reg [7:0] result;

initial
begin
	currentAddress=0;
	requestAddress=1;
	done=0;
	state=0;
end

task ReadMemory;
	input [16:0] location;
	input [7:0]  returnState;
	begin
		done<=0;
		state<=returnState;
		requestAddress<=location;
	end
endtask

always @(posedge clk)
begin
	if (!done && currentAddress==requestAddress) begin
		result<=data;
		done<=1;
	end
end

always @(negedge clk)
begin
	address<=requestAddress;
	currentAddress<=requestAddress;
end

always @(posedge clk)
begin
	if (state==0)
	begin
		$display("%d: Got:%d", state, result);
		ReadMemory(12, 1);
	end
end

always @(posedge done)
begin
	if (state==1)
	begin
		$display("%d: Got:%d", state, result);
		ReadMemory(13, 2);
	end
end

always @(posedge done)
begin
	if (state==2)
	begin
		$display("%d: Got:%d", state, result);
		ReadMemory(14, 3);
	end
end

always @(posedge done)
begin
	if (state==3)
	begin
		$display("%d: Got:%d", state, result);
		ReadMemory(15, 4);
	end
end

endmodule



module main();

reg clk;
reg [7:0] data;
wire [16:0] address;

boss b(clk, address, data);

integer i;

initial
begin
	$display("Welcome");
	for (i=0; i<10; i=i+1) begin
		#10 clk=1;
		#10 clk=0;
		#10 data=address*2;
	end
	$finish;
end

endmodule
